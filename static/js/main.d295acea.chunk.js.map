{"version":3,"sources":["components/App/App.js","index.js"],"names":["recomendations","geometrical_simple","title","usage","where","formula","geometrical_weight","moda","notes","mediana","arifmetical_simple","arifmetical_weight","hronological_simple","App","props","state","step","proceed_steps","choice","data_type","time_range","form","time","interval","group","order","symmetric","interval_equal","adjacent_interval","questions","key","question","list","amount_data","categorical_data","yes","no","absolute","relative","moment","answer","next","bind","previous","pickChoice","this","setState","push","console","log","lastStep","length","splice","e","value","className","map","data","i","FormControl","component","variant","FormLabel","style","RadioGroup","row","aria-label","name","Object","keys","FormControlLabel","margin","control","Radio","label","disabled","onChange","math","List","li","ListItem","Button","onClick","React","Component","ReactDOM","render","basename","document","getElementById"],"mappings":"0WAcMA,EAAiB,CACnBC,mBAAoB,CAChBC,MAAO,wNACPC,MAAO,0WACPC,MAAO,CAAC,4IAEJ,qCAAO,oCAAP,yHAEJC,QAAS,0DAEbC,mBAAoB,CAChBJ,MAAO,8NACPC,MAAO,0dACPE,QAAS,qFACTD,MAAO,CACH,4IACA,qCAAO,oCAAP,wHACA,qCAAO,oCAAP,8QAGRG,KAAM,CACFL,MAAO,sEACPM,MAAO,mSACPL,MAAO,4TAEXM,QAAS,CACLP,MAAO,wFACPM,MAAO,0UACPL,MAAO,uXAEXO,mBAAoB,CAChBR,MAAO,wNACPC,MAAO,mQACPE,QAAS,2DACTD,MAAO,CACH,uIACA,qGAGRO,mBAAoB,CAChBT,MAAO,8NACPC,MAAO,obACPE,QAAS,mGACTD,MAAO,CACH,2JACA,qCAAO,oCAAP,uNACA,qCAAO,oCAAP,8QAGRQ,oBAAqB,CACjBV,MAAO,8NACPC,MAAO,yUACPE,QAAS,6FACTD,MAAO,CACH,oMACA,qCAAO,oCAAP,qLACA,qCAAO,oCAAP,iMACA,qCAAO,oCAAP,+KA0XGS,E,kDAlXX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,KAAM,KACNd,MAAO,oMACPe,cAAe,GACfC,OAAQ,CACJC,UAAW,KACXC,WAAY,KACZC,KAAM,KACNC,KAAM,KACNC,SAAU,KACVC,MAAO,KACPC,MAAO,KACPC,UAAW,KACXC,eAAgB,KAChBC,kBAAmB,MAEvBC,UAAW,CACPV,UAAW,CACPW,IAAK,YACLC,SAAU,qGACVC,KAAM,CACFC,YAAa,kFACbC,iBAAkB,4GAG1Bd,WAAY,CACRU,IAAK,aACLC,SAAU,8KACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,iBAGZf,KAAM,CACFS,IAAK,OACLC,SAAU,0IACVC,KAAM,CACFK,SAAU,kFACVC,SAAU,8EAGlBhB,KAAM,CACFQ,IAAK,OACLC,SAAU,4GACVC,KAAM,CACFO,OAAQ,4EACRhB,SAAU,gGAGlBA,SAAU,CACNO,IAAK,WACLC,SAAU,0NACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,iBAGZZ,MAAO,CACHM,IAAK,QACLC,SAAU,yFACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,iBAGZX,MAAO,CACHK,IAAK,QACLC,SAAU,qGACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,iBAGZV,UAAW,CACPI,IAAK,YACLC,SAAU,6HACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,iBAGZT,eAAgB,CACZG,IAAK,iBACLC,SAAU,yFACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,iBAGZR,kBAAmB,CACfE,IAAK,oBACLC,SAAU,0NACVC,KAAM,CACFG,IAAK,qBACLC,GAAI,kBAIhBI,OAAQ,MAGZ,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBA1GH,E,mDA6GX,IAAD,EACoBG,KAAK9B,MAArBG,EADJ,EACIA,OAAQF,EADZ,EACYA,KAEf,IAAIA,GAASE,EAAOF,GAApB,CAKA,IAAKA,EAED,OADA6B,KAAKC,SAAS,CAAC9B,KAAM,cACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUV,WAG9D,IAAKD,EAAOC,WAAsB,cAATH,EAErB,OADA6B,KAAKC,SAAS,CAAC9B,KAAM,cACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUV,WAI9D,GAAyB,qBAArBD,EAAOC,UACP,OAAKD,EAAOO,MAKS,QAAjBP,EAAOO,MACAoB,KAAKC,SAAS,CACjBN,OAAQ,YAGLK,KAAKC,SAAS,CACjBN,OAAQ,UAVZK,KAAKC,SAAS,CAAC9B,KAAM,UACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUJ,QAelE,GAAyB,gBAArBP,EAAOC,UAA6B,CACpC,IAAKD,EAAOE,WAER,OADAyB,KAAKC,SAAS,CAAC9B,KAAM,eACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUT,YAK9D,GAA0B,QAAtBF,EAAOE,WAAsB,CAC7B,IAAKF,EAAOG,KAER,OADAwB,KAAKC,SAAS,CAAC9B,KAAM,SACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUR,MAI9D,GAAoB,aAAhBH,EAAOG,KAAqB,CAC5B,IAAKH,EAAOI,KAER,OADAuB,KAAKC,SAAS,CAAC9B,KAAM,SACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUP,MAI9D,GAAoB,aAAhBJ,EAAOI,KAAqB,CAC5B,IAAKJ,EAAOS,eAER,OADAkB,KAAKC,SAAS,CAAC9B,KAAM,mBACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUF,gBAG9D,GAA8B,OAA1BT,EAAOS,eACP,OAAOkB,KAAKC,SAAS,CAACN,OAAQ,uBAC3B,GAA8B,QAA1BtB,EAAOS,eACd,OAAOkB,KAAKC,SAAS,CAACN,OAAQ,4BAE/B,GAAoB,WAAhBtB,EAAOI,KAAmB,CACjC,IAAKJ,EAAOU,kBAER,OADAiB,KAAKC,SAAS,CAAC9B,KAAM,sBACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUD,mBAG9D,GAAiC,OAA7BV,EAAOU,kBACP,OAAOiB,KAAKC,SAAS,CAACN,OAAQ,wBAC3B,GAAiC,QAA7BtB,EAAOU,kBACd,OAAOiB,KAAKC,SAAS,CAACN,OAAQ,yBAM1C,GAAoB,aAAhBtB,EAAOG,KAAqB,CAC5B,IAAKH,EAAOK,SAER,OADAsB,KAAKC,SAAS,CAAC9B,KAAM,aACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUN,UAI9D,GAAwB,OAApBL,EAAOK,SACP,OAAOsB,KAAKC,SAAS,CAACN,OAAQ,uBAC3B,GAAwB,QAApBtB,EAAOK,SACd,OAAOsB,KAAKC,SAAS,CAACN,OAAQ,4BAGnC,CAGH,IAAKtB,EAAOQ,UAER,OADAmB,KAAKC,SAAS,CAAC9B,KAAM,cACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUH,WAG9D,GAAyB,OAArBR,EAAOQ,UACP,OAAOmB,KAAKC,SAAS,CAACN,OAAQ,YAC3B,GAAyB,QAArBtB,EAAOQ,UAAqB,CAGnC,IAAKR,EAAOG,KAER,OADAwB,KAAKC,SAAS,CAAC9B,KAAM,SACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUR,MAI9D,GAAIH,EAAOG,OAASH,EAAOM,MAEvB,OADAqB,KAAKC,SAAS,CAAC9B,KAAM,UACd6B,KAAK9B,MAAME,cAAc8B,KAAKF,KAAK9B,MAAMc,UAAUL,OAI9D,GAAoB,aAAhBN,EAAOG,KAAqB,CAC5B,GAAqB,OAAjBH,EAAOM,MACP,OAAOqB,KAAKC,SAAS,CAACN,OAAQ,uBAC3B,GAAqB,QAAjBtB,EAAOM,MACd,OAAOqB,KAAKC,SAAS,CAACN,OAAQ,uBAKtC,GAAoB,aAAhBtB,EAAOG,KAAqB,CAE5B,GAAqB,OAAjBH,EAAOM,MACP,OAAOqB,KAAKC,SAAS,CAACN,OAAQ,uBAC3B,GAAqB,QAAjBtB,EAAOM,MACd,OAAOqB,KAAKC,SAAS,CAACN,OAAQ,gCArI9CQ,QAAQC,IAAI,Y,iCA8IhB,GAAKJ,KAAK9B,MAAMyB,OAWZK,KAAKC,SAAS,CACVN,OAAQ,WAZQ,CACpB,IAAMU,EAAWL,KAAK9B,MAAME,cAAc4B,KAAK9B,MAAME,cAAckC,OAAS,GAE5EN,KAAK9B,MAAME,cAAcmC,QAAQ,EAAG,GAEpCP,KAAKC,SAAS,CACVN,OAAQ,KACRtB,OAAO,2BAAK2B,KAAK9B,MAAMG,QAAjB,kBAA0BgC,EAASpB,IAAM,OAC/Cd,KAAM6B,KAAK9B,MAAME,cAAckC,OAASN,KAAK9B,MAAME,cAAc4B,KAAK9B,MAAME,cAAckC,OAAS,GAAGrB,IAAM,U,iCAS7GuB,EAAGvB,EAAKwB,GAEXD,GACAR,KAAKC,SAAS,CAAC5B,OAAO,2BAAK2B,KAAK9B,MAAMG,QAAjB,kBAA0BY,EAAMwB,Q,+BAInD,IAAD,OACCd,EAASK,KAAK9B,MAAMyB,OAC1B,OACI,sBAAKe,UAAU,MAAf,UACI,wBAAQA,UAAU,eAElB,gCACI,6BAAKV,KAAK9B,MAAMb,SAGXsC,GACD,+BAEQK,KAAK9B,MAAME,cAAcuC,KAAI,SAACC,EAAMC,GAAP,OACzB,eAACC,EAAA,EAAD,CAAaC,UAAU,WAAWL,UAAU,OAC/BM,QAAQ,SADrB,UAGI,eAACC,EAAA,EAAD,CAAWF,UAAU,SACVG,MAAO,CAAC,OAAU,SAClBR,UAAU,WAFrB,UAEiCG,EAAI,EAFrC,KAE0CD,EAAK1B,YAC/C,cAACiC,EAAA,EAAD,CAAYC,KAAG,EAACC,aAAW,OAAOC,KAAK,OAAOb,MAAO,EAAKvC,MAAMG,OAAOY,IAAvE,SAEQsC,OAAOC,KAAKZ,EAAKzB,MAAMwB,KAAI,SAAC1B,GAAD,OACvB,cAACwC,EAAA,EAAD,CAAkBP,MAAO,CACrB,gBAAiB,MACjB,MAAS,kBACT,WAAc,UACd,cAAe,MACf,eAAgB,OAElBQ,OAAO,OACPjB,MAAOxB,EAAK0C,QAAS,cAACC,EAAA,EAAD,IACrBC,MAAOjB,EAAKzB,KAAKF,GACjB6C,SAAU,EAAK5D,MAAMC,OAASyC,EAAK3B,KAAOU,EAC1CoC,SAAU,SAACvB,GAAD,OAAO,EAAKT,WAAWS,EAAGI,EAAK3B,IAAKA,aApBR4B,QA8BzD,OAAXlB,GACA,sBAAKe,UAAU,OAAf,UACI,+KACA,6BAAKvD,EAAewC,GAAQtC,QAE5B,8BAEQF,EAAewC,GAAQnC,SACvB,cAAC,IAAD,CAAKwE,KAAM7E,EAAewC,GAAQnC,YAIzCL,EAAewC,GAAQpC,OACxB,cAAC0E,EAAA,EAAD,UACK9E,EAAewC,GAAQpC,MAAMoD,KAAI,SAACuB,EAAIrB,GAAL,OAC9B,cAACsB,EAAA,EAAD,UACKD,GADUrB,QAMtB1D,EAAewC,GAAQhC,OACxB,8BACI,8BAAIR,EAAewC,GAAQhC,MAA3B,SAGHR,EAAewC,GAAQrC,OACxB,8BACI,8BAAG,qJAAH,IAAiCH,EAAewC,GAAQrC,MAAxD,YAOZ,sBAAKoD,UAAU,UAAf,UACKV,KAAK9B,MAAMC,MAAQ,cAACiE,EAAA,EAAD,CAAQpB,QAAS,WAAYqB,QAASrC,KAAKF,SAA3C,SAAsD,oCACxEH,GAAU,cAACyC,EAAA,EAAD,CACRpB,QAAS,YACTqB,QAASrC,KAAKJ,KAFN,SAEcI,KAAK9B,MAAMC,KAAkB,sBAAX,sD,GA3WlDmE,IAAMC,W,QCxExBC,IAASC,OACP,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d295acea.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\n\nconst recomendations = {\n    geometrical_simple: {\n        title: 'Формула середньої геометричної простої',\n        usage: 'обчислення середньорічного темпу зростання виробництва продукції',\n        where: [\n            `n – кількість спостережень;`,\n            <span>x<sub>i</sub> – i-ий показник ряду, i = 1,…, n.</span>,\n        ],\n        formula: '\\\\bar{x}=\\\\sqrt[n]{\\\\displaystyle\\\\prod_{i=1}^n x_{i}}',\n    },\n    geometrical_weight: {\n        title: 'Формула середньої геометричної зваженої',\n        usage: 'обчислення середніх темпів зростання виробництва продукції за неоднакові проміжки часу',\n        formula: '\\\\bar{x}=\\\\sqrt[{\\\\sum_{i=1}^n f_{i}}]{\\\\displaystyle\\\\prod_{i=1}^n x_{i}^{f_{i}}}',\n        where: [\n            'n – кількість спостережень;',\n            <span>x<sub>i</sub> – i-ий показник ряду, i = 1,…, n;</span>,\n            <span>f<sub>i</sub> – кількість спостережень в i-ій групі (інтервалі), i = 1,…,n.</span>,\n        ]\n    },\n    moda: {\n        title: 'Формула моди',\n        notes: 'Визначається як значення ознаки з найбільшою частотою',\n        usage: 'визначення товару, який користується максимальним попитом',\n    },\n    mediana: {\n        title: 'Формула медіани',\n        notes: 'Визначається як значення ознаки, що знаходиться в середині ряд',\n        usage: 'визначення середнього освітнього рівня співробітників підприємства',\n    },\n    arifmetical_simple: {\n        title: 'Формула середньої арифметичної простої',\n        usage: 'визначення середньорічного темпу зростання цін',\n        formula: '\\\\bar{x}=\\\\cfrac{\\\\displaystyle\\\\sum_{i=1}^{n} x_{i}}{n}',\n        where: [\n            'x – окремі значення ознаки;',\n            'n – об\\'єм сукупності.',\n        ]\n    },\n    arifmetical_weight: {\n        title: 'Формула середньої арифметичної зваженої',\n        usage: 'визначення середньомісячної зарплати робітників в різних відділах підприємства',\n        formula: '\\\\bar{x}=\\\\cfrac{\\\\displaystyle\\\\sum_{i=1}^{m} x_{i}*f_{i}}{\\\\displaystyle\\\\sum_{i=1}^{m} f_{i}}',\n        where: [\n            'm – кількість груп (інтервалів);',\n            <span>x<sub>i</sub> – середній показник i-ої групи (інтервалу);</span>,\n            <span>f<sub>i</sub> – кількість спостережень в i-ій групі (інтервалі), i = 1,…,m.</span>,\n        ]\n    },\n    hronological_simple: {\n        title: 'Формула середньої хронологічної простої',\n        usage: 'обчислення  середнього рівня випуску продукції за весь період',\n        formula: '\\\\bar{y}=\\\\cfrac{\\\\cfrac{y_{1} + y_{n}}{2} + {\\\\displaystyle\\\\sum_{t=2}^{n-1} y_{t}}}{n-1}',\n        where: [\n            'n – кількість рівнів динамічного ряду;',\n            <span>y<sub>1</sub> – перший рівень динамічного ряду);</span>,\n            <span>y<sub>n</sub> – останній рівень динамічного ряду);</span>,\n            <span>y<sub>i</sub> – t-ий рівень динамічного ряду, t=1,…,n.</span>,\n        ]\n    },\n\n};\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            step: null,\n            title: 'ВИЗНАЧЕННЯ МIРИ ЦЕНТРАЛЬНОÏ ТЕНДЕНЦIÏ',\n            proceed_steps: [],\n            choice: {\n                data_type: null,\n                time_range: null,\n                form: null,\n                time: null,\n                interval: null,\n                group: null,\n                order: null,\n                symmetric: null,\n                interval_equal: null,\n                adjacent_interval: null,\n            },\n            questions: {\n                data_type: {\n                    key: 'data_type',\n                    question: 'Визначте тип даних',\n                    list: {\n                        amount_data: 'кількісні дані',\n                        categorical_data: 'категоріальні дані',\n                    }\n                },\n                time_range: {\n                    key: 'time_range',\n                    question: 'Дані представлені часовим рядом',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n                form: {\n                    key: 'form',\n                    question: 'Яка форма вираження даних',\n                    list: {\n                        absolute: 'Абсолютні дані',\n                        relative: 'Відносні дані',\n                    }\n                },\n                time: {\n                    key: 'time',\n                    question: 'За ознакою часу дані',\n                    list: {\n                        moment: 'Моментні дані',\n                        interval: 'Інтервальні дані',\n                    }\n                },\n                interval: {\n                    key: 'interval',\n                    question: 'Між суміжними датами однакові інтервали?',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n                group: {\n                    key: 'group',\n                    question: 'Дані згруповані?',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n                order: {\n                    key: 'order',\n                    question: 'Дані впорядковані?',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n                symmetric: {\n                    key: 'symmetric',\n                    question: 'Розподіл симметричний?',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n                interval_equal: {\n                    key: 'interval_equal',\n                    question: 'Інтервалі рівні?',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n                adjacent_interval: {\n                    key: 'adjacent_interval',\n                    question: 'Між сіміжними датами однакові інтервали?',\n                    list: {\n                        yes: 'Так',\n                        no: 'Ні',\n                    }\n                },\n            },\n            answer: null,\n        };\n\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.pickChoice = this.pickChoice.bind(this);\n    }\n\n    next() {\n        const {choice, step} = this.state;\n\n        if (step && !choice[step]) {\n            console.log('Choose');\n            return;\n        }\n\n        if (!step) {\n            this.setState({step: 'data_type'});\n            return this.state.proceed_steps.push(this.state.questions.data_type);\n        }\n\n        if (!choice.data_type && step !== 'data_type') {\n            this.setState({step: 'data_type'});\n            return this.state.proceed_steps.push(this.state.questions.data_type);\n        }\n\n        // Категоріальні дані\n        if (choice.data_type === 'categorical_data') {\n            if (!choice.order) {\n                this.setState({step: 'order'});\n                return this.state.proceed_steps.push(this.state.questions.order);\n            }\n            // впорядковані таким чином --> медіана чи мода\n            if (choice.order === 'yes') {\n                return this.setState({\n                    answer: 'mediana'\n                });\n            } else {\n                return this.setState({\n                    answer: 'moda'\n                });\n            }\n        }\n\n        // Кількістні дані\n        if (choice.data_type === 'amount_data') {\n            if (!choice.time_range) {\n                this.setState({step: 'time_range'});\n                return this.state.proceed_steps.push(this.state.questions.time_range);\n            }\n\n\n            // Впорядковані часовим рядом?\n            if (choice.time_range === 'yes') {\n                if (!choice.form) {\n                    this.setState({step: 'form'});\n                    return this.state.proceed_steps.push(this.state.questions.form);\n                }\n\n                // Якщо абсолютні дані\n                if (choice.form === 'absolute') {\n                    if (!choice.time) {\n                        this.setState({step: 'time'});\n                        return this.state.proceed_steps.push(this.state.questions.time);\n                    }\n\n\n                    if (choice.time === 'interval') {\n                        if (!choice.interval_equal) {\n                            this.setState({step: 'interval_equal'});\n                            return this.state.proceed_steps.push(this.state.questions.interval_equal);\n                        }\n\n                        if (choice.interval_equal === 'no') {\n                            return this.setState({answer: 'arifmetical_weight'});\n                        } else if (choice.interval_equal === 'yes') {\n                            return this.setState({answer: 'arifmetical_simple'});\n                        }\n                    } else if (choice.time === 'moment') {\n                        if (!choice.adjacent_interval) {\n                            this.setState({step: 'adjacent_interval'});\n                            return this.state.proceed_steps.push(this.state.questions.adjacent_interval);\n                        }\n\n                        if (choice.adjacent_interval === 'no') {\n                            return this.setState({answer: 'hronological_weight'});\n                        } else if (choice.adjacent_interval === 'yes') {\n                            return this.setState({answer: 'hronological_simple'});\n                        }\n                    }\n                }\n\n                // Якщо відносні дані\n                if (choice.form === 'relative') {\n                    if (!choice.interval) {\n                        this.setState({step: 'interval'});\n                        return this.state.proceed_steps.push(this.state.questions.interval);\n                    }\n\n                    // Інтервалі однакові?\n                    if (choice.interval === 'no') {\n                        return this.setState({answer: 'arifmetical_weight'});\n                    } else if (choice.interval === 'yes') {\n                        return this.setState({answer: 'arifmetical_simple'});\n                    }\n                }\n            } else {\n                // ЯКЩО НЕ ПО ЧАСУ\n\n                if (!choice.symmetric) {\n                    this.setState({step: 'symmetric'});\n                    return this.state.proceed_steps.push(this.state.questions.symmetric);\n                }\n\n                if (choice.symmetric === 'no') {\n                    return this.setState({answer: 'mediana'});\n                } else if (choice.symmetric === 'yes') {\n\n                    // Яка форма вираження данних?\n                    if (!choice.form) {\n                        this.setState({step: 'form'});\n                        return this.state.proceed_steps.push(this.state.questions.form);\n                    }\n\n                    // Чи дані згріповані?\n                    if (choice.form && !choice.group) {\n                        this.setState({step: 'group'});\n                        return this.state.proceed_steps.push(this.state.questions.group);\n                    }\n\n                    // Якщо абсолютні дані\n                    if (choice.form === 'absolute') {\n                        if (choice.group === 'no') {\n                            return this.setState({answer: 'arifmetical_simple'});\n                        } else if (choice.group === 'yes') {\n                            return this.setState({answer: 'arifmetical_weight'});\n                        }\n                    }\n\n                    // Якщо відносні дані\n                    if (choice.form === 'relative') {\n                        // Дані згріповані?\n                        if (choice.group === 'no') {\n                            return this.setState({answer: 'geometrical_simple'});\n                        } else if (choice.group === 'yes') {\n                            return this.setState({answer: 'geometrical_weight'});\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    previous() {\n        if (!this.state.answer) {\n            const lastStep = this.state.proceed_steps[this.state.proceed_steps.length - 1];\n\n            this.state.proceed_steps.splice(-1, 1);\n\n            this.setState({\n                answer: null,\n                choice: {...this.state.choice, [lastStep.key]: null},\n                step: this.state.proceed_steps.length ? this.state.proceed_steps[this.state.proceed_steps.length - 1].key : null\n            });\n        } else {\n            this.setState({\n                answer: null,\n            });\n        }\n    }\n\n    pickChoice(e, key, value) {\n\n        if (e) {\n            this.setState({choice: {...this.state.choice, [key]: value}});\n        }\n    }\n\n    render() {\n        const answer = this.state.answer;\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                </header>\n                <div>\n                    <h4>{this.state.title}</h4>\n\n                    {\n                        !answer &&\n                        <form>\n                            {\n                                this.state.proceed_steps.map((data, i) =>\n                                    <FormControl component=\"fieldset\" className='step' key={i}\n                                                 variant='filled'\n                                    >\n                                        <FormLabel component=\"legend\"\n                                                   style={{'margin': '1em 0',}}\n                                                   className='question'>{i + 1}. {data.question}</FormLabel>\n                                        <RadioGroup row aria-label=\"quiz\" name=\"quiz\" value={this.state.choice.key}>\n                                            {\n                                                Object.keys(data.list).map((key) =>\n                                                    <FormControlLabel style={{\n                                                        'margin-bottom': '1em',\n                                                        'width': 'calc(50% - 1em)',\n                                                        'background': '#f1f1f1',\n                                                        'margin-left': '8px',\n                                                        'margin-right': '8px',\n                                                    }}\n                                                      margin='none'\n                                                      value={key} control={<Radio/>}\n                                                      label={data.list[key]}\n                                                      disabled={this.state.step !== data.key || answer}\n                                                      onChange={(e) => this.pickChoice(e, data.key, key)}/>)\n                                            }\n                                        </RadioGroup>\n                                    </FormControl>\n                                )\n                            }\n                        </form>\n                    }\n\n                    {\n                        answer !== null &&\n                        <div className='step'>\n                            <h2>ВАМ РЕКОМЕНДОВАНА ФОРМУЛА:</h2>\n                            <h1>{recomendations[answer].title}</h1>\n\n                            <div>\n                                {\n                                    recomendations[answer].formula &&\n                                    <TeX math={recomendations[answer].formula} />\n                                }\n                            </div>\n\n                            {recomendations[answer].where &&\n                            <List>\n                                {recomendations[answer].where.map((li, i) =>\n                                    <ListItem key={i}>\n                                        {li}\n                                    </ListItem>)}\n                            </List>\n                            }\n\n                            {recomendations[answer].notes &&\n                            <div>\n                                <i>{recomendations[answer].notes}.</i>\n                            </div>\n                            }\n                            {recomendations[answer].usage &&\n                            <div>\n                                <p><b>Можливе використання:</b> {recomendations[answer].usage}.</p>\n                            </div>\n                            }\n                        </div>\n                    }\n\n\n                    <div className='buttons'>\n                        {this.state.step && <Button variant={'outlined'} onClick={this.previous}>{'Назад'}</Button>}\n                        {!answer && <Button\n                            variant={'contained'}\n                            onClick={this.next}>{!this.state.step ? 'Почати' : 'Далi'}</Button>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}