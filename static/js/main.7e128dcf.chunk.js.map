{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["App","props","state","step","title","proceed_steps","choice","data_type","time_range","form","time","interval","group","order","symmetric","interval_equal","adjacent_interval","questions","key","question","list","amount_data","categorical_data","yes","no","absolute","relative","moment","answer","next","bind","previous","pickChoice","this","setState","push","console","log","lastStep","length","splice","e","value","className","map","data","i","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","Object","keys","FormControlLabel","style","control","Radio","label","disabled","onChange","Button","onClick","List","li","ListItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7e128dcf.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      step: null,\n      title: 'ВИЗНАЧЕННЯ ВИДУ СЕРЕДНЬОГО ЗНАЧЕННЯ В ЗАЛЕЖНОСТІ ВІД ТИПУ ДАНИХ',\n      proceed_steps: [],\n      choice: {\n        data_type: null,\n        time_range: null,\n        form: null,\n        time: null,\n        interval: null,\n        group: null,\n        order: null,\n        symmetric: null,\n        interval_equal: null,\n        adjacent_interval: null,\n      },\n      questions: {\n        data_type: {\n          key: 'data_type',\n          question: 'Визначте тип даних',\n          list: {\n            amount_data: 'кількісні дані',\n            categorical_data: 'категоріальні дані',\n          }\n        },\n        time_range: {\n          key: 'time_range',\n          question: 'Дані представлені часовим рядом',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n        form: {\n          key: 'form',\n          question: 'Яка форма вираження даних',\n          list: {\n            absolute: 'Абсолютні дані',\n            relative: 'Відносні дані',\n          }\n        },\n        time: {\n          key: 'time',\n          question: 'За ознакою часу дані',\n          list: {\n            moment: 'Моментні дані',\n            interval: 'Інтервальні дані',\n          }\n        },\n        interval: {\n          key: 'interval',\n          question: 'Між суміжними датами однакові інтервали?',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n        group: {\n          key: 'group',\n          question: 'Дані згруповані?',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n        order: {\n          key: 'order',\n          question: 'Дані впорядковані?',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n        symmetric: {\n          key: 'symmetric',\n          question: 'Розподіл симметричний?',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n        interval_equal: {\n          key: 'interval_equal',\n          question: 'Інтервалі рівні?',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n        adjacent_interval: {\n          key: 'adjacent_interval',\n          question: 'Між сіміжними датами однакові інтервали?',\n          list: {\n            yes: 'Так',\n            no: 'Ні',\n          }\n        },\n      },\n      answer: null,\n    };\n\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.pickChoice = this.pickChoice.bind(this);\n  }\n\n  next() {\n    const { choice, step } = this.state;\n\n    if (step && !choice[step]) {\n      console.log('Choose');\n      return ;\n    }\n\n    if (!step) {\n      this.setState({step: 'data_type'});\n      return this.state.proceed_steps.push(this.state.questions.data_type);\n    }\n\n    if (!choice.data_type && step !== 'data_type') {\n      this.setState({step: 'data_type'});\n      return this.state.proceed_steps.push(this.state.questions.data_type);\n    }\n\n    // Категоріальні дані\n    if (choice.data_type === 'categorical_data') {\n      if (!choice.order) {\n        this.setState({step: 'order'});\n        return this.state.proceed_steps.push(this.state.questions.order);\n      }\n      // впорядковані таким чином --> медіана чи мода\n      if (choice.order === 'yes') {\n        return this.setState({\n          answer: {title: 'Медіана'}\n        });\n      } else {\n        return this.setState({\n          answer: {title: 'Мода'}\n        });\n      }\n    }\n\n    // Кількістні дані\n    if (choice.data_type === 'amount_data') {\n      if (!choice.time_range) {\n        this.setState({step: 'time_range'});\n        return this.state.proceed_steps.push(this.state.questions.time_range);\n      }\n\n\n      // Впорядковані часовим рядом?\n      if (choice.time_range === 'yes') {\n        if (!choice.form) {\n          this.setState({step: 'form'});\n          return this.state.proceed_steps.push(this.state.questions.form);\n        }\n\n        // Якщо абсолютні дані\n        if (choice.form === 'absolute') {\n          if (!choice.time) {\n            this.setState({step: 'time'});\n            return this.state.proceed_steps.push(this.state.questions.time);\n          }\n\n\n          if (choice.time === 'interval') {\n            if (!choice.interval_equal) {\n              this.setState({step: 'interval_equal'});\n              return this.state.proceed_steps.push(this.state.questions.interval_equal);\n            }\n\n            if (choice.interval_equal === 'no') {\n              return this.setState({\n                answer: {title: 'Середня арифметична зважена'}\n              });\n            } else if (choice.interval_equal === 'yes') {\n              return this.setState({\n                answer: {title: 'Середня арифметична проста'}\n              });\n            }\n          } else if (choice.time === 'moment') {\n            if (!choice.adjacent_interval) {\n              this.setState({step: 'adjacent_interval'});\n              return this.state.proceed_steps.push(this.state.questions.adjacent_interval);\n            }\n\n            if (choice.adjacent_interval === 'no') {\n              return this.setState({\n                answer: {title: 'Середня хронологічна зважена'}\n              });\n            } else if (choice.adjacent_interval === 'yes') {\n              return this.setState({\n                answer: {title: 'Середня хронологічна проста'}\n              });\n            }\n          }\n        }\n\n        // Якщо відносні дані\n        if (choice.form === 'relative') {\n          if (!choice.interval) {\n            this.setState({step: 'interval'});\n            return this.state.proceed_steps.push(this.state.questions.interval);\n          }\n\n          // Інтервалі однакові?\n          if (choice.interval === 'no') {\n            return this.setState({\n              answer: {title: 'Середня арифметична зважена'}\n            });\n          } else if (choice.interval === 'yes') {\n            return this.setState({\n              answer: {title: 'Середня арифметична проста'}\n            });\n          }\n        }\n      } else {\n        // ЯКЩО НЕ ПО ЧАСУ\n\n        if (!choice.symmetric) {\n          this.setState({step: 'symmetric'});\n          return this.state.proceed_steps.push(this.state.questions.symmetric);\n        }\n\n        if (choice.symmetric === 'no') {\n          return this.setState({answer: {title: 'Медіана'}});\n        } else if (choice.symmetric === 'yes') {\n\n          // Яка форма вираження данних?\n          if (!choice.form) {\n            this.setState({step: 'form'});\n            return this.state.proceed_steps.push(this.state.questions.form);\n          }\n\n          // Чи дані згріповані?\n          if (choice.form && !choice.group) {\n            this.setState({step: 'group'});\n            return this.state.proceed_steps.push(this.state.questions.group);\n          }\n\n          // Якщо абсолютні дані\n          if (choice.form === 'absolute') {\n            if (choice.group === 'no') {\n              return this.setState({\n                answer: {title: 'Середня арифметична проста'}\n              });\n            } else if (choice.group === 'yes') {\n              return this.setState({\n                answer: {title: 'Середня арифметична зважена'}\n              });\n            }\n          }\n\n          // Якщо відносні дані\n          if (choice.form === 'relative') {\n            // Дані згріповані?\n            if (choice.group === 'no') {\n              return this.setState({\n                answer: {title: 'Середня геометрична проста'}\n              });\n            } else if (choice.group === 'yes') {\n              return this.setState({\n                answer: {title: 'Середня геометрична зважена'}\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // if (this.state.step === 'form') {\n    //   if (choice.form === 'absolute' && choice.time_range === 'yes') {\n    //     this.setState({step: 'time'});\n    //     return this.state.proceed_steps.push(this.state.questions.time);\n    //   } else if (choice.form === 'absolute' && choice.time_range === 'no') {\n    //     this.setState({step: 'group'});\n    //     return this.state.proceed_steps.push(this.state.questions.group);\n    //   }\n    //\n    //   if (choice.form === 'relative') {\n    //     this.setState({step: 'group'});\n    //     return this.state.proceed_steps.push(this.state.questions.group);\n    //   }\n    // }\n    //\n    // if (this.state.step === 'time') {\n    //   if (choice.time === 'moment') {\n    //     this.setState({step: 'interval'});\n    //     return this.state.proceed_steps.push(this.state.questions.interval);\n    //   }\n    // }\n    //\n    // if (this.state.step === 'interval') {\n    //   if (choice.interval === 'yes') {\n    //     return this.setState({answer: {\n    //         title: 'Вам рекомендовано використовувати формулу середньої хронологічної',\n    //         list: [\n    //           'кількість рівнів динамічного ряду', 'перший рівень динамічного ряду', 'останній рівень динамічного ряду', '-ий рівень динамічного ряду',\n    //         ],\n    //         note: 'Можливе використання в економічних обрахунках: обчислення середнього рівня випуску продукції за весь період.'\n    //       }});\n    //   }\n    // }\n    //\n    // if (this.state.step === 'group') {\n    //   if (choice.data_type === 'amount_data'\n    //       && choice.time_range === 'no'\n    //       && choice.group === 'no'\n    //       && choice.form === 'relative') {\n    //     return this.setState({answer: {\n    //         title: 'Вам рекомендовано використовувати формулу середньої геометричної простої:',\n    //         list: [\n    //           'кількість спостережень', '-ий показник ряду,',\n    //         ],\n    //         note: 'Можливе використання в економічних обрахунках: обчислення середньорічного темпу зростання виробництва продукції.'\n    //       }});\n    //   }\n    //\n    //\n    //   if (choice.data_type === 'amount_data'\n    //       && choice.time_range === 'no'\n    //       && choice.group === 'yes'\n    //       && choice.form === 'absolute') {\n    //     return this.setState({answer: {\n    //         title: 'Вам рекомендовано використовувати формулу середньої арифметичної зваженої:',\n    //         list: [\n    //           'кількість груп (інтервалів)', 'cередній показник -ої групи (інтервалу)', 'кількість спостережень в -ій групі (інтервалі)',\n    //         ],\n    //         note: 'Можливе використання в економічних обрахунках: обчислення середнього курсу акцій, при умові що відомо курс продажу й кількість проданих акцій за цим курсом.'\n    //       }});\n    //   }\n    // }\n  }\n\n  previous() {\n    const lastStep = this.state.proceed_steps[this.state.proceed_steps.length - 1];\n\n    this.state.proceed_steps.splice(-1,1);\n\n    this.setState({\n      answer: null,\n      choice: { ...this.state.choice, [lastStep.key]: null},\n      step: this.state.proceed_steps.length ? this.state.proceed_steps[this.state.proceed_steps.length - 1].key : null\n    });\n  }\n\n  pickChoice(e, key, value) {\n\n    if (e) {\n      this.setState({choice: { ...this.state.choice, [key]: value}});\n    }\n  }\n\n  render () {\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n          </header>\n          <div>\n            <h4>{this.state.title}</h4>\n\n            <form>\n              {\n                this.state.proceed_steps.map((data, i) =>\n                    <FormControl component=\"fieldset\" className='step' key={i}>\n                      <FormLabel component=\"legend\" className='question'>{data.question}</FormLabel>\n                      <RadioGroup row aria-label=\"quiz\" name=\"quiz\" value={this.state.choice.key}>\n                        {\n                          Object.keys(data.list).map((key) =>\n                              <FormControlLabel style={{'width': '50%'}} value={key} control={<Radio/>} label={data.list[key]}\n                                                disabled={this.state.step !== data.key}\n                                                onChange={(e) => this.pickChoice(e, data.key, key)}/>)\n                        }\n                      </RadioGroup>\n                    </FormControl>\n                )\n              }\n            </form>\n            {this.state.step && <Button onClick={this.previous}>{'Назад'}</Button>}\n            {!this.state.answer && <Button onClick={this.next}>{!this.state.step ? 'Почати' : 'Далi'}</Button>}\n\n            {\n              this.state.answer !== null &&\n              <div className='step'>\n                <p>{this.state.answer.title}</p>\n                {this.state.answer && this.state.answer.list &&\n                <List>\n                  {this.state.answer.list.map((li, i) => <ListItem key={i}>- {li}</ListItem>)}\n                </List>\n                }\n                {/*<p>{this.state.answer.note}</p>*/}\n              </div>\n            }\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}